name: build .NET 9

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  analyze:
    if: github.event_name != 'pull_request' && github.ref != 'refs/heads/master'
    name: Analyze CodeQL
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: csharp
          build-mode: autobuild
        - language: javascript-typescript
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
    - if: matrix.build-mode == 'manual' && matrix.language == 'csharp'
      shell: bash
      run: |
       dotnet build -c Release /t:Rebuild

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
  build:
    if: ${{ always() }}
    needs: analyze
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
      PUBLISH: ${{ github.ref == 'refs/heads/master' }}
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v2
      id: buildx
      with:
        install: true
        version: latest
    - uses: docker/login-action@v2
      if: ${{ env.PUBLISH }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=sha
          type=edge
          type=raw,value=latest,enable={{is_default_branch}}
    - uses: docker/build-push-action@v3
      id: build
      with:
        file: Dockerfile
        context: .
        push: ${{ env.PUBLISH }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
